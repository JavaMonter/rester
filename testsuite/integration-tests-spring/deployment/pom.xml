<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-integration-tests-spring</artifactId>
        <version>3.15.7.Final</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>resteasy-integration-tests-spring-deployment</artifactId>
    <name>RESTEasy Main testsuite: Spring integration tests - Deployment</name>

    <profiles>
        <!--
        Name:  download
        Descr: Download WildFly
        -->
        <profile>
          <id>download</id>
          <activation>
            <property>
              <name>!server.home</name>
            </property>
          </activation>
          <build>
            <plugins>
              <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.wildfly</groupId>
                                    <artifactId>wildfly-dist</artifactId>
                                    <version>${server.version}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/test-server</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
              </plugin>
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-resteasy</id>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <target>
                                <!-- Explicitly remove resteasy-spring contents as the module.xml does not reference resource jars in this case
                                     so adding jars without removing old ones basically messes up the classloader -->
                                <delete>
                                    <fileset dir="${project.build.directory}/test-server/wildfly-${server.version}/modules/system/layers/base/org/jboss/resteasy/resteasy-spring/main" includes="**/*.jar"/>
                                </delete>
                                <unzip src="../../../jboss-modules/target/resteasy-jboss-modules-${project.version}.zip"
                                       dest="${project.build.directory}/test-server/wildfly-${server.version}/modules/system/layers/base"
                                       overwrite="true"/>
                                <delete dir="target/dependency-maven-plugin-markers"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
              </plugin>
            </plugins>
          </build>
          <properties>
            <jboss.home>${project.build.directory}/test-server/wildfly-${server.version}</jboss.home>
          </properties>
        </profile>
        <!-- This profile creates custom server configuration file with configured Elytron subsystem -->
        <profile>
            <id>elytron</id>
            <activation>
                <property>
                    <name>elytron</name>
                </property>
            </activation>
            <properties>
                <security.provider>elytron</security.provider>
                <jboss.server.config.file.name>standalone-full-elytron.xml</jboss.server.config.file.name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-elytron-server-config</id>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <target>
                                        <copy file="${jboss.home}/standalone/configuration/standalone-full.xml"
                                              tofile="${jboss.home}/standalone/configuration/${jboss.server.config.file.name}"
                                              overwrite="true" failonerror="true"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>enable-elytron-full-cli</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/java</executable>
                                    <commandlineArgs>
                                        ${modular.jdk.args} -jar ${jboss.home}/jboss-modules.jar
                                        -mp ${jboss.home}/modules
                                        org.jboss.as.cli
                                        --file=${basedir}/../../config/enable-elytron-full.cli
                                    </commandlineArgs>
                                    <environmentVariables>
                                        <JBOSS_HOME>${jboss.home}</JBOSS_HOME>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- 
            Test against MicroProfile config.
            standalone-microprofile.xml is used to replace occurrences of
            standalone-full.xml in Arquillian configuration (arquillian.xml)
        -->
        <profile>
            <id>standalone.microprofile.profile</id>
            <activation>
                <property>
                    <name>ts.standalone.microprofile</name>
                </property>
            </activation>
            <properties>
                <jboss.server.config.file.name>standalone-microprofile.xml</jboss.server.config.file.name>
                <!--
                    Excluding those tests that would need modules 
                    which are in standalone-full.xml but not in 
                    standalone-microprofile.xml
                -->
                <microprofile.excluded.groups>,org.jboss.resteasy.category.ExpectedFailingWithStandaloneMicroprofileConfiguration</microprofile.excluded.groups>
            </properties>
        </profile>
    </profiles>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>arquillian.xml</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <excludes>
                    <exclude>arquillian.xml</exclude>
                </excludes>
            </testResource>
        </testResources>
    </build>

</project>
